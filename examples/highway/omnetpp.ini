[General]
cmdenv-express-mode = true
cmdenv-autoflush = true
cmdenv-status-frequency = 10s
num-rngs = 6

ned-path = .
network = scenario

##########################################################
#            Simulation parameters                       #
##########################################################
debug-on-errors = true
print-undisposed = true

*.playgroundSizeX = 65000m
*.playgroundSizeY = 25000m
*.playgroundSizeZ = 50m

#let our modules decide when to stop the simulation
sim-time-limit = 1e6 s

**.debug = false
**.coreDebug = false

##########################################################
# Annotation parameters                                  #
##########################################################
*.annotations.draw = false

##########################################################
# Obstacle parameters                                    #
##########################################################
*.obstacles.debug = false

##########################################################
#            WorldUtility parameters                     #
##########################################################
*.world.useTorus = false
*.world.use2D = false

##########################################################
#            TraCIScenarioManager parameters             #
##########################################################
*.manager.updateInterval = 0.01s
*.manager.host = "localhost"
*.manager.moduleType = "Car"
*.manager.moduleName = "node"
*.manager.moduleDisplayString = ""
*.manager.autoShutdown = true
*.manager.margin = 25

##########################################################
#            11p specific parameters                     #
#                                                        #
#                    NIC-Settings                        #
##########################################################
*.connectionManager.sendDirect = true
*.connectionManager.maxInterfDist = 2600m
*.connectionManager.drawMaxIntfDist = false

*.**.nic.mac1609_4.useServiceChannel = false

*.**.nic.mac1609_4.txPower = 100mW
*.**.nic.mac1609_4.bitrate = 6Mbps

*.**.nic.phy80211p.sensitivity = -94dBm
*.**.nic.phy80211p.maxTXPower = 100mW
*.**.nic.phy80211p.useThermalNoise = true
*.**.nic.phy80211p.thermalNoise = -95dBm
*.**.nic.phy80211p.decider = xmldoc("config.xml")
*.**.nic.phy80211p.analogueModels = xmldoc("config.xml")
*.**.nic.phy80211p.usePropagationDelay = true

##########################################################
#                      Mobility                          #
##########################################################
*.node[*].mobility.x = 0
*.node[*].mobility.y = 0
*.node[*].mobility.z = 1.895


##########################################################
#                    Seeds and PRNGs                     #
##########################################################
seed-set = ${repetition}
**.seed = ${repetition}

*.node[*].unicast.rng-0 = 1
*.node[*].prot.rng-0 = 2
*.node[*].appl.rng-0 = 3
*.node[*].scenario.rng-0 = 4
**.traffic.rng-0 = 5

#launch config. tells Veins which SUMO configuration to run
*.manager.configFile = "./sumocfg/rampsHighway.sumo.cfg"
#launch command. change sumo-gui with sumo depending on what you want to launch
*.manager.commandLine = "sumo-gui --remote-port $port --seed $seed --configuration-file $configFile"

##########################################################
#                   Common parameters                    #
##########################################################

**.numberOfCars = ${nCars = 40000}
**.numberOfCarsPerPlatoon = ${platoonSize = 1}
**.numberOfLanes = ${nLanes = 1}
**.controllerXi = ${caccXi = 1}
**.controllerOmegaN = ${caccOmegaN = 0.2}


##########################################################
#                    Position helper                     #
##########################################################

*.node[*].helper_type = "NewPositionHelper"

##########################################################
#               Scenario common parameters               #
##########################################################

#controller and engine related parameters
*.node[*].scenario.caccC1 = 0.5
*.node[*].scenario.caccXi = ${caccXi}
*.node[*].scenario.caccOmegaN = ${caccOmegaN} Hz
*.node[*].scenario.engineTau = 0.5 s
*.node[*].scenario.ploegH = ${ploegH = 0.5}s
*.node[*].scenario.ploegKp = 0.2
*.node[*].scenario.ploegKd = 0.7
*.node[*].scenario.useRealisticEngine = false
*.node[*].scenario.speedRangeAccepted = ${speedRange = 5, 10, 30 }

#controllers to be tested
**.numericController = 0
*.node[*].scenario.controller = "CACC"

#headway for ACCs
*.node[*].scenario.accHeadway = 0.1 s
*.node[*].scenario.leaderHeadway = ${leaderHeadway = 1.2}s

#average leader speed
*.node[*].scenario.leaderSpeed = ${leaderSpeed = 100}kmph

##########################################################
#                      Application                       #
##########################################################

*.node[*].appl_type = "SimplePlatooningApp"
#enable statistics recording for the application
*.node[*].appl.*.scalar-recording = true
*.node[*].appl.*.vector-recording = true
#collect data for time
*.node[*].appl.simulationDuration = 400 s

##########################################################
#                Communication protocols                 #
##########################################################

*.node[*].protocol_type = "SimplePlatooningBeaconing"
#enable statistics recording for the network layer
*.node[*].prot.*.scalar-recording = true
*.node[*].prot.*.vector-recording = true
#set the beaconing interval to be 0.1s
*.node[*].prot.beaconingInterval = ${beaconInterval = 0.1}s
#access category for platooning beacons
*.node[*].prot.priority = ${priority = 2}
#packet size for platooning beacon
*.node[*].prot.packetSize = ${packetSize = 200}
#via wireless send acceleration computed by the controller, not the actual one
*.node[*].prot.useControllerAcceleration = true
#set to 0 the packet loss rate for the unicast protocol
*.node[*].unicast.packetLossRate = 0

##########################################################
#                    Traffic manager                     #
##########################################################

**.traffic_type = "PlatoonsTrafficManager"
#insert platooning vehicles at time
**.traffic.platoonInsertTime = 1 s
#insert platooning vehicles with a speed of
**.traffic.platoonInsertSpeed = ${leaderSpeed}kmph
#insert nCars platooning vehicles
**.traffic.nCars = ${nCars}
**.helper.nCars = ${nCars}
#let platoonSize cars per platoon
**.traffic.platoonSize = ${platoonSize}
**.helper.platoonSize = ${platoonSize}
#use nLanes lanes
**.traffic.nLanes = ${nLanes}
**.helper.nLanes = ${nLanes}
#SUMO vtype for platooning vehicles
**.traffic.platooningVType = "vtypeauto"
#insert vehicles already at steady-state. distance depends on controller
**.traffic.platoonInsertDistance = 25 m
**.traffic.platoonInsertHeadway = 0 s
**.traffic.platoonLeaderHeadway = ${leaderHeadway}s
**.numericDistributionMean = ${mean = 0, 1}
*.traffic.distributionInsertionTime = ${distributionInsertionTime = exponential(8.389261745), exponential(1.37433815283) ! mean}



[Config Highway]

repeat = 1

#use the join maneuver scenario
*.node[*].scenario_type = "HighwayScenario"

output-vector-file = ${resultdir}/${configname}_${repetition}_${mean}_${speedRange}.vec
output-scalar-file = ${resultdir}/${configname}_${repetition}_${mean}_${speedRange}.sca

[Config HighwayNoGui]
extends = Highway
*.manager.commandLine = "sumo --remote-port $port --seed $seed --configuration-file $configFile"
#force the config name in the output file to be the same as for the gui experiment
output-vector-file = ${resultdir}/Highway_${repetition}_${mean}_${speedRange}.vec
output-scalar-file = ${resultdir}/Highway_${repetition}_${mean}_${speedRange}.sca
